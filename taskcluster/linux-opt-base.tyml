taskId: ${taskcluster.taskId}
provisionerId: ${taskcluster.docker.provisionerId}
workerType: ${taskcluster.docker.workerType}
taskGroupId: ${taskcluster.taskGroupId}
schedulerId: ${taskcluster.schedulerId}
dependencies:
  $map: { $eval: build.dependencies }
  each(b):
    $eval: as_slugid(b)
created: { $fromNow: '0 sec' }
deadline: { $fromNow: '1 day' }
expires:
  $if: 'event.event == "push"'
  then: { $fromNow: '6 months' }
  else: { $fromNow: '7 days' }

extra:
  github:
    $if: 'event.event == "push"'
    then: { $eval: taskcluster.github_events.merge }
    else: { $eval: taskcluster.github_events.pull_request }

routes:
  $if: 'event.event == "push"'
  then:
    { $eval: build.routes }

payload:
  maxRunTime: { $eval: to_int(build.maxRunTime) }
  image: "ubuntu:14.04"

  env:
    TENSORFLOW_BUILD_ARTIFACT: ${build.tensorflow}

  command:
    - "/bin/bash"
    - "--login"
    - "-cxe"
    - $let:
        extraSystemSetup: { $eval: strip(str(build.system_setup)) }
        extraSystemConfig: { $eval: strip(str(build.system_config)) }
      in: >
        apt-get -qq update && apt-get -qq -y install git pixz wget pkg-config libsox-dev && ${extraSystemSetup} &&
        adduser --system --home /home/build-user build-user &&
        export PATH=/home/build-user/bin:$PATH &&
        wget https://github.com/git-lfs/git-lfs/releases/download/v2.2.1/git-lfs-linux-amd64-2.2.1.tar.gz -O - | tar -C /tmp -zxf - &&
        PREFIX=/home/build-user/ /tmp/git-lfs-2.2.1/install.sh &&
        cd /home/build-user/ &&
        echo -e "#!/bin/bash\nset -xe\nenv && id && (wget -O - $TENSORFLOW_BUILD_ARTIFACT | pixz -d | tar -C /home/build-user/ -xf - ) && git clone --quiet ${event.head.repo.url} ~/DeepSpeech/ds/ && cd ~/DeepSpeech/ds && git checkout --quiet ${event.head.sha} && ln -s ~/DeepSpeech/ds/native_client/ ~/DeepSpeech/tf/native_client" > /tmp/clone.sh && chmod +x /tmp/clone.sh &&
        sudo -H -u build-user /bin/bash /tmp/clone.sh &&
        /home/build-user/DeepSpeech/tf/tc-apt.sh && ${extraSystemConfig} &&
        sudo -H -u build-user /bin/bash /home/build-user/DeepSpeech/ds/tc-build.sh ${build.args.tcbuild} &&
        sudo -H -u build-user /bin/bash /home/build-user/DeepSpeech/ds/tc-package.sh

  artifacts:
    "public":
      type: "directory"
      path: "/tmp/artifacts/"
      expires:
        $if: 'event.event == "push"'
        then: { $fromNow: '6 months' }
        else: { $fromNow: '7 days' }

metadata:
  name: ${build.metadata.name}
  description: ${build.metadata.description}
  owner: ${event.head.user.email}
  source: ${event.head.repo.url}
