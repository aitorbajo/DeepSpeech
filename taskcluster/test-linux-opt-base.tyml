$if: 'event.event != "push"'
then:
  taskId: ${taskcluster.taskId}
  provisionerId: ${taskcluster.docker.provisionerId}
  workerType: ${taskcluster.docker.workerType}
  taskGroupId: ${taskcluster.taskGroupId}
  schedulerId: ${taskcluster.schedulerId}
  dependencies:
    $map: { $eval: build.dependencies }
    each(b):
      $eval: as_slugid(b)
  created: { $fromNow: '0 sec' }
  deadline: { $fromNow: '1 day' }
  expires: { $fromNow: '7 days' }

  extra:
    github:
      { $eval: taskcluster.github_events.pull_request }

  payload:
    maxRunTime: { $eval: to_int(build.maxRunTime) }
    image: "ubuntu:14.04"

    env:
      $let:
        training: { $eval: as_slugid("test-training-linux-amd64-opt") }
        linux_amd64_build: { $eval: as_slugid("linux-amd64-cpu-opt") }
      in:
        TENSORFLOW_WHEEL: https://index.taskcluster.net/v1/task/project.deepspeech.tensorflow.pip.master.cpu/artifacts/public/tensorflow_warpctc-1.3.0rc0-cp27-cp27mu-linux_x86_64.whl
        DEEPSPEECH_ARTIFACTS_ROOT: https://queue.taskcluster.net/v1/task/${linux_amd64_build}/runs/0/artifacts/public
        DEEPSPEECH_MODEL: https://queue.taskcluster.net/v1/task/${training}/runs/0/artifacts/public/output_graph.pb

    command:
      - "/bin/bash"
      - "--login"
      - "-cxe"
      - $let:
          extraSystemSetup: { $eval: strip(str(build.system_setup)) }
        in: >
          apt-get -qq update && apt-get -qq -y install git pixz libsox2 wget && ${extraSystemSetup} &&
          adduser --system --home /home/build-user build-user &&
          cd /home/build-user &&
          echo -e "#!/bin/bash\nset -xe\n id && mkdir ~/DeepSpeech/ && git clone --quiet ${event.head.repo.url} ~/DeepSpeech/ds/ && cd ~/DeepSpeech/ds && git checkout --quiet ${event.head.sha}" > /tmp/clone.sh && chmod +x /tmp/clone.sh &&
          sudo -H -u build-user /bin/bash /tmp/clone.sh &&
          sudo -H -u build-user --preserve-env /bin/bash ${build.args.tests_cmdline}

    artifacts:
      "public":
        type: "directory"
        path: "/tmp/artifacts/"
        expires:
          $if: 'event.event == "push"'
          then: { $fromNow: '6 months' }
          else: { $fromNow: '7 days' }

  metadata:
    name: ${build.metadata.name}
    description: ${build.metadata.description}
    owner: ${event.head.user.email}
    source: ${event.head.repo.url}
